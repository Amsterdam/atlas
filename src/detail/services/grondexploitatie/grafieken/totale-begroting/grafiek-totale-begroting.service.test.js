import { CATEGORIES, CATEGORY_LABELS } from '../grondexploitatie-categories';

import generateGraphData from './grafiek-totale-begroting.service';

describe('Grondexploitatie Grafiek Totale Begroting Service', () => {
  describe('generateGraphData', () => {
    const mockApiData = [
      {
        categorie: CATEGORIES.BEDRIJFSRUIMTE,
        totaal: { begroot: 5000000 }
      },
      {
        categorie: CATEGORIES.KANTOORRUIMTE,
        totaal: { begroot: 500000 }
      },
      {
        categorie: CATEGORIES.MARKT_WONINGEN,
        totaal: { begroot: 450000 }
      },
      {
        categorie: CATEGORIES.LUPSUM,
        totaal: { begroot: 449999 }
      }
    ];
    const graphData = generateGraphData(mockApiData);
    const findItem = (category) => graphData.find((item) => item.name === category);

    it('should return the data in correct format', () => {
      expect(findItem(CATEGORY_LABELS[CATEGORIES.KANTOORRUIMTE])).toEqual({
        name: CATEGORY_LABELS[CATEGORIES.KANTOORRUIMTE],
        id: CATEGORIES.KANTOORRUIMTE,
        value: {
          label: '0,5',
          value: 0.5
        }
      });
      expect(findItem(CATEGORY_LABELS[CATEGORIES.BEDRIJFSRUIMTE])).toEqual({
        name: CATEGORY_LABELS[CATEGORIES.BEDRIJFSRUIMTE],
        id: CATEGORIES.BEDRIJFSRUIMTE,
        value: {
          label: '5',
          value: 5
        }
      });
      expect(findItem(CATEGORY_LABELS[CATEGORIES.COMMERCIEEL])).toEqual({
        name: CATEGORY_LABELS[CATEGORIES.COMMERCIEEL],
        id: CATEGORIES.COMMERCIEEL,
        value: {
          label: '0',
          value: 0
        }
      });
    });

    it('should complete the label correctly', () => {
      expect(findItem(CATEGORY_LABELS[CATEGORIES.MARKT_WONINGEN]).value.label).toEqual('0,5');
      expect(findItem(CATEGORY_LABELS[CATEGORIES.LUPSUM]).value.label).toEqual('0,4');
    });
  });
});

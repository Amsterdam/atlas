import React from 'react';
import PropTypes from 'prop-types';
import { Legend, BarChart, Bar, XAxis, YAxis, CartesianGrid, ResponsiveContainer, Cell, LabelList, Rectangle } from 'recharts';

import CustomLegenda from '../legenda/CustomLegenda';
import { getGrondexploitatieCategoryColor } from '../../../services/grondexploitatie/grafieken/grondexploitatie-categories';
import './_grondexploitatie-grafiek-totale-begroting.scss';

const CustomBar = (props) => {
  const { fill, height, width, x, y } = props;
  return (
    <Rectangle
      fill={fill}
      height={height / 2}
      width={width}
      x={x}
      y={y}
    />
  );
};

CustomBar.defaultProps = {
  fill: '',
  height: 0,
  width: 0,
  x: 0,
  y: 0
};

CustomBar.propTypes = {
  fill: PropTypes.string,
  height: PropTypes.number,
  width: PropTypes.number,
  x: PropTypes.number,
  y: PropTypes.number
};

const GrondexploitatieGrafiekTotaleBegroting = ({ data }) => (
  <div className="grondexploitatie-grafiek-totale-begroting">
    <h3 className="grondexploitatie-grafiek-totale-begroting__title">
      Totale begroting
    </h3>
    <div className="grondexploitatie-grafiek-totale-begroting__container">
      <ResponsiveContainer
        minHeight={527}
        minWidth={500}
        width="100%"
      >
        <BarChart
          barSize={20}
          data={data}
          layout="vertical"
        >
          <XAxis
            axisLine={false}
            domain={['auto', (dataMax) => Math.round(dataMax * 1.1)]}
            label={{
              fill: '#999999',
              fontSize: '12px',
              offset: -10,
              position: 'insideBottom',
              value: 'Miljoenen'
            }}
            tick={{ fill: '#999999' }}
            tickLine={false}
            type="number"
          />
          <YAxis
            axisLine={false}
            dataKey="name"
            hide={false}
            tick={{ fill: '#999999' }}
            tickLine={false}
            type="category"
            width={180}
          />
          <CartesianGrid
            fill="#F6F6F6"
            horizontal={false}
          />
          <Legend content={<CustomLegenda />} />
          <Bar
            dataKey="begroot.value"
            name="category"
          >
            {
              data.map((entry) => (
                <Cell
                  fill={getGrondexploitatieCategoryColor(entry.id)}
                  key={entry.name}
                />
              ))
            }
            <LabelList
              dataKey="begroot.label"
              fill="#000000"
              position="right"
            />
          </Bar>
          <Bar
            dataKey="geboekt.value"
            fill="#808080"
            name="realized"
            shape={<CustomBar />}
          >
            <LabelList
              dataKey="geboekt.label"
              fill="#000000"
              position="right"
            />
          </Bar>
        </BarChart>
      </ResponsiveContainer>
    </div>
  </div>
);

GrondexploitatieGrafiekTotaleBegroting.defaultProps = {
  data: []
};

GrondexploitatieGrafiekTotaleBegroting.propTypes = {
  data: PropTypes.array // eslint-disable-line
};

export default GrondexploitatieGrafiekTotaleBegroting;

import React from 'react';
import PropTypes from 'prop-types';
import {
  Bar,
  BarChart,
  CartesianGrid,
  Cell,
  LabelList,
  ResponsiveContainer,
  XAxis,
  YAxis
} from 'recharts';

import Notification from '../../../../shared/components/notification/Notification';
import { getGrondexploitatieCategoryColor }
  from '../../../services/grondexploitatie/grafieken/grondexploitatie-categories';

import './_grondexploitatie-grafiek-gefaseerde-begroting.scss';

const GrondexploitatieGrafiekGefaseerdeBegroting = ({ data, max }) => (
  <div>
    { data.map((year) => (
      <div
        className="grondexploitatie-grafiek-totale-begroting"
        key={year.name}
      >
        <h3 className="grondexploitatie-grafiek-totale-begroting__title">
          Begroot in {year.name}
        </h3>
        { !year.categories &&
          <Notification level="message">Geen begroting beschikbaar</Notification>
        }
        { year.categories &&
          <div className="grondexploitatie-grafiek-totale-begroting__container">
            <ResponsiveContainer
              minHeight={310}
              minWidth={500}
              width="100%"
            >
              <BarChart
                barSize={20}
                data={year.categories}
                layout="vertical"
                margin={{ bottom: 30 }}
              >
                <XAxis
                  axisLine={false}
                  domain={['auto', () => Math.round(max * 1.2)]}
                  label={{
                    fill: '#999999',
                    fontSize: '12px',
                    offset: -10,
                    position: 'insideBottom',
                    value: 'Miljoenen'
                  }}
                  tick={{ fill: '#999999' }}
                  tickLine={false}
                  type="number"
                />
                <YAxis
                  axisLine={false}
                  dataKey="name"
                  hide={false}
                  minTickGap={0}
                  padding={{ top: 16, bottom: 16 }}
                  tick={{ fill: '#999999' }}
                  tickLine={false}
                  type="category"
                  width={180}
                />
                <CartesianGrid
                  fill="#F6F6F6"
                  horizontal={false}
                />
                <Bar
                  dataKey="begrootValue"
                  name="category"
                >
                  {
                    year.categories.map((entry) => (
                      <Cell
                        fill={getGrondexploitatieCategoryColor(entry.id)}
                        key={entry.name}
                      />
                    ))
                  }
                  <LabelList
                    dataKey="begrootLabel"
                    fill="#000000"
                    position="right"
                  />
                </Bar>
              </BarChart>
            </ResponsiveContainer>
          </div>
        }
      </div>
    ))}
  </div>
);

GrondexploitatieGrafiekGefaseerdeBegroting.defaultProps = {
  data: [],
  max: 0
};

GrondexploitatieGrafiekGefaseerdeBegroting.propTypes = {
  data: PropTypes.array, // eslint-disable-line
  max: PropTypes.number
};

export default GrondexploitatieGrafiekGefaseerdeBegroting;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataSelection should render as gesplitst 1`] = `
<div
  className="c-data-selection c-dashboard__content"
>
  <div
    className="c-data-selection-content qa-data-selection-content"
  >
    <AngularWrapper
      angularInstance={
        Object {
          "$$csp": [Function],
          "$$encodeUriQuery": [Function],
          "$$encodeUriSegment": [Function],
          "$$lowercase": [Function],
          "$$minErr": [Function],
          "$$stringify": [Function],
          "$$uppercase": [Function],
          "$interpolateMinErr": [Function],
          "UNSAFE_restoreLegacyJqLiteXHTMLReplacement": [Function],
          "bind": [Function],
          "bootstrap": [Function],
          "callbacks": Object {
            "$$counter": 0,
          },
          "copy": [Function],
          "element": [Function],
          "equals": [Function],
          "errorHandlingConfig": [Function],
          "extend": [Function],
          "forEach": [Function],
          "fromJson": [Function],
          "getTestability": [Function],
          "identity": [Function],
          "injector": [Function],
          "isArray": [Function],
          "isDate": [Function],
          "isDefined": [Function],
          "isElement": [Function],
          "isFunction": [Function],
          "isNumber": [Function],
          "isObject": [Function],
          "isString": [Function],
          "isUndefined": [Function],
          "merge": [Function],
          "module": [Function],
          "noop": [Function],
          "reloadWithDebugInfo": [Function],
          "toJson": [Function],
          "version": Object {
            "codeName": "nested-vaccination",
            "dot": 0,
            "full": "1.8.0",
            "major": 1,
            "minor": 8,
          },
        }
      }
      bindings={
        Object {
          "availableFilters": undefined,
          "dataset": "bag",
          "filters": Object {},
          "geometryFilter": Object {},
          "isLoading": false,
          "numberOfRecords": 10,
          "showHeader": true,
          "user": Object {},
          "view": "LIST",
        }
      }
      component="dpDataSelectionHeader"
      dependencies={
        Array [
          "atlas",
        ]
      }
      interpolateBindings={Object {}}
      moduleName="dpDataSelectionHeaderWrapper"
    />
    <Connect(DataSelectionActiveFilters) />
    <div
      className="u-grid qa-data-grid"
    >
      <div
        className="u-row"
      >
        <div
          className="u-col-sm--12"
        >
          <div>
            <Connect(DataSelectionList)
              content={Object {}}
            />
            <AngularWrapper
              angularInstance={
                Object {
                  "$$csp": [Function],
                  "$$encodeUriQuery": [Function],
                  "$$encodeUriSegment": [Function],
                  "$$lowercase": [Function],
                  "$$minErr": [Function],
                  "$$stringify": [Function],
                  "$$uppercase": [Function],
                  "$interpolateMinErr": [Function],
                  "UNSAFE_restoreLegacyJqLiteXHTMLReplacement": [Function],
                  "bind": [Function],
                  "bootstrap": [Function],
                  "callbacks": Object {
                    "$$counter": 0,
                  },
                  "copy": [Function],
                  "element": [Function],
                  "equals": [Function],
                  "errorHandlingConfig": [Function],
                  "extend": [Function],
                  "forEach": [Function],
                  "fromJson": [Function],
                  "getTestability": [Function],
                  "identity": [Function],
                  "injector": [Function],
                  "isArray": [Function],
                  "isDate": [Function],
                  "isDefined": [Function],
                  "isElement": [Function],
                  "isFunction": [Function],
                  "isNumber": [Function],
                  "isObject": [Function],
                  "isString": [Function],
                  "isUndefined": [Function],
                  "merge": [Function],
                  "module": [Function],
                  "noop": [Function],
                  "reloadWithDebugInfo": [Function],
                  "toJson": [Function],
                  "version": Object {
                    "codeName": "nested-vaccination",
                    "dot": 0,
                    "full": "1.8.0",
                    "major": 1,
                    "minor": 8,
                  },
                }
              }
              bindings={
                Object {
                  "currentPage": 1,
                  "numberOfPages": undefined,
                  "setPage": [Function],
                }
              }
              component="dpDataSelectionPagination"
              dependencies={
                Array [
                  "atlas",
                ]
              }
              interpolateBindings={Object {}}
              moduleName="dpDataSelectionPaginationWrapper"
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`DataSelection should render as volledig 1`] = `
<div
  className="c-data-selection c-dashboard__content"
>
  <div
    className="c-data-selection-content qa-data-selection-content"
  >
    <AngularWrapper
      angularInstance={
        Object {
          "$$csp": [Function],
          "$$encodeUriQuery": [Function],
          "$$encodeUriSegment": [Function],
          "$$lowercase": [Function],
          "$$minErr": [Function],
          "$$stringify": [Function],
          "$$uppercase": [Function],
          "$interpolateMinErr": [Function],
          "UNSAFE_restoreLegacyJqLiteXHTMLReplacement": [Function],
          "bind": [Function],
          "bootstrap": [Function],
          "callbacks": Object {
            "$$counter": 0,
          },
          "copy": [Function],
          "element": [Function],
          "equals": [Function],
          "errorHandlingConfig": [Function],
          "extend": [Function],
          "forEach": [Function],
          "fromJson": [Function],
          "getTestability": [Function],
          "identity": [Function],
          "injector": [Function],
          "isArray": [Function],
          "isDate": [Function],
          "isDefined": [Function],
          "isElement": [Function],
          "isFunction": [Function],
          "isNumber": [Function],
          "isObject": [Function],
          "isString": [Function],
          "isUndefined": [Function],
          "merge": [Function],
          "module": [Function],
          "noop": [Function],
          "reloadWithDebugInfo": [Function],
          "toJson": [Function],
          "version": Object {
            "codeName": "nested-vaccination",
            "dot": 0,
            "full": "1.8.0",
            "major": 1,
            "minor": 8,
          },
        }
      }
      bindings={
        Object {
          "availableFilters": undefined,
          "dataset": "bag",
          "filters": Object {},
          "geometryFilter": Object {},
          "isLoading": false,
          "numberOfRecords": 10,
          "showHeader": true,
          "user": Object {},
          "view": "TABLE",
        }
      }
      component="dpDataSelectionHeader"
      dependencies={
        Array [
          "atlas",
        ]
      }
      interpolateBindings={Object {}}
      moduleName="dpDataSelectionHeaderWrapper"
    />
    <Connect(DataSelectionActiveFilters) />
    <div
      className="u-grid qa-data-grid"
    >
      <div
        className="u-row"
      >
        <div
          className="u-col-sm--3 c-data-selection__available-filters"
        >
          <AngularWrapper
            angularInstance={
              Object {
                "$$csp": [Function],
                "$$encodeUriQuery": [Function],
                "$$encodeUriSegment": [Function],
                "$$lowercase": [Function],
                "$$minErr": [Function],
                "$$stringify": [Function],
                "$$uppercase": [Function],
                "$interpolateMinErr": [Function],
                "UNSAFE_restoreLegacyJqLiteXHTMLReplacement": [Function],
                "bind": [Function],
                "bootstrap": [Function],
                "callbacks": Object {
                  "$$counter": 0,
                },
                "copy": [Function],
                "element": [Function],
                "equals": [Function],
                "errorHandlingConfig": [Function],
                "extend": [Function],
                "forEach": [Function],
                "fromJson": [Function],
                "getTestability": [Function],
                "identity": [Function],
                "injector": [Function],
                "isArray": [Function],
                "isDate": [Function],
                "isDefined": [Function],
                "isElement": [Function],
                "isFunction": [Function],
                "isNumber": [Function],
                "isObject": [Function],
                "isString": [Function],
                "isUndefined": [Function],
                "merge": [Function],
                "module": [Function],
                "noop": [Function],
                "reloadWithDebugInfo": [Function],
                "toJson": [Function],
                "version": Object {
                  "codeName": "nested-vaccination",
                  "dot": 0,
                  "full": "1.8.0",
                  "major": 1,
                  "minor": 8,
                },
              }
            }
            bindings={
              Object {
                "activeFilters": Object {},
                "availableFilters": undefined,
              }
            }
            component="dpDataSelectionAvailableFilters"
            dependencies={
              Array [
                "atlas",
              ]
            }
            interpolateBindings={
              Object {
                "dataset": "bag",
              }
            }
            moduleName="dpDataSelectionAvailableFiltersWrapper"
          />
        </div>
        <div
          className="u-col-sm--9"
        >
          <div>
            <DataSelectionTable
              content={Object {}}
            />
            <AngularWrapper
              angularInstance={
                Object {
                  "$$csp": [Function],
                  "$$encodeUriQuery": [Function],
                  "$$encodeUriSegment": [Function],
                  "$$lowercase": [Function],
                  "$$minErr": [Function],
                  "$$stringify": [Function],
                  "$$uppercase": [Function],
                  "$interpolateMinErr": [Function],
                  "UNSAFE_restoreLegacyJqLiteXHTMLReplacement": [Function],
                  "bind": [Function],
                  "bootstrap": [Function],
                  "callbacks": Object {
                    "$$counter": 0,
                  },
                  "copy": [Function],
                  "element": [Function],
                  "equals": [Function],
                  "errorHandlingConfig": [Function],
                  "extend": [Function],
                  "forEach": [Function],
                  "fromJson": [Function],
                  "getTestability": [Function],
                  "identity": [Function],
                  "injector": [Function],
                  "isArray": [Function],
                  "isDate": [Function],
                  "isDefined": [Function],
                  "isElement": [Function],
                  "isFunction": [Function],
                  "isNumber": [Function],
                  "isObject": [Function],
                  "isString": [Function],
                  "isUndefined": [Function],
                  "merge": [Function],
                  "module": [Function],
                  "noop": [Function],
                  "reloadWithDebugInfo": [Function],
                  "toJson": [Function],
                  "version": Object {
                    "codeName": "nested-vaccination",
                    "dot": 0,
                    "full": "1.8.0",
                    "major": 1,
                    "minor": 8,
                  },
                }
              }
              bindings={
                Object {
                  "currentPage": 1,
                  "numberOfPages": undefined,
                  "setPage": [Function],
                }
              }
              component="dpDataSelectionPagination"
              dependencies={
                Array [
                  "atlas",
                ]
              }
              interpolateBindings={Object {}}
              moduleName="dpDataSelectionPaginationWrapper"
            />
            <div
              className="u-row"
            >
              <div
                className="u-col-sm--12"
              >
                <div
                  className="u-margin__top--4"
                >
                  <Connect(ShareBar) />
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`DataSelection should render the container 1`] = `
<div
  className="c-data-selection c-dashboard__content"
>
  <div
    className="c-data-selection-content qa-data-selection-content"
  >
    <AngularWrapper
      angularInstance={
        Object {
          "$$csp": [Function],
          "$$encodeUriQuery": [Function],
          "$$encodeUriSegment": [Function],
          "$$lowercase": [Function],
          "$$minErr": [Function],
          "$$stringify": [Function],
          "$$uppercase": [Function],
          "$interpolateMinErr": [Function],
          "UNSAFE_restoreLegacyJqLiteXHTMLReplacement": [Function],
          "bind": [Function],
          "bootstrap": [Function],
          "callbacks": Object {
            "$$counter": 0,
          },
          "copy": [Function],
          "element": [Function],
          "equals": [Function],
          "errorHandlingConfig": [Function],
          "extend": [Function],
          "forEach": [Function],
          "fromJson": [Function],
          "getTestability": [Function],
          "identity": [Function],
          "injector": [Function],
          "isArray": [Function],
          "isDate": [Function],
          "isDefined": [Function],
          "isElement": [Function],
          "isFunction": [Function],
          "isNumber": [Function],
          "isObject": [Function],
          "isString": [Function],
          "isUndefined": [Function],
          "merge": [Function],
          "module": [Function],
          "noop": [Function],
          "reloadWithDebugInfo": [Function],
          "toJson": [Function],
          "version": Object {
            "codeName": "nested-vaccination",
            "dot": 0,
            "full": "1.8.0",
            "major": 1,
            "minor": 8,
          },
        }
      }
      bindings={
        Object {
          "availableFilters": undefined,
          "dataset": "bag",
          "filters": Object {},
          "geometryFilter": Object {
            "markers": Array [],
          },
          "isLoading": false,
          "numberOfRecords": undefined,
          "showHeader": true,
          "user": Object {
            "scopes": Array [],
          },
          "view": "LIST",
        }
      }
      component="dpDataSelectionHeader"
      dependencies={
        Array [
          "atlas",
        ]
      }
      interpolateBindings={Object {}}
      moduleName="dpDataSelectionHeaderWrapper"
    />
    <Connect(DataSelectionActiveFilters) />
    <Paragraph>
      Geen resultaten van deze soort
    </Paragraph>
    <Paragraph>
      Tip: verwijder een of meer criteria
    </Paragraph>
    <div
      className="u-grid qa-data-grid"
    >
      <div
        className="u-row"
      >
        <div
          className="u-col-sm--12"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`DataSelection should render the loading state 1`] = `
<div
  className="c-data-selection c-dashboard__content"
>
  <div
    className="c-data-selection-content qa-data-selection-content"
  >
    <AngularWrapper
      angularInstance={
        Object {
          "$$csp": [Function],
          "$$encodeUriQuery": [Function],
          "$$encodeUriSegment": [Function],
          "$$lowercase": [Function],
          "$$minErr": [Function],
          "$$stringify": [Function],
          "$$uppercase": [Function],
          "$interpolateMinErr": [Function],
          "UNSAFE_restoreLegacyJqLiteXHTMLReplacement": [Function],
          "bind": [Function],
          "bootstrap": [Function],
          "callbacks": Object {
            "$$counter": 0,
          },
          "copy": [Function],
          "element": [Function],
          "equals": [Function],
          "errorHandlingConfig": [Function],
          "extend": [Function],
          "forEach": [Function],
          "fromJson": [Function],
          "getTestability": [Function],
          "identity": [Function],
          "injector": [Function],
          "isArray": [Function],
          "isDate": [Function],
          "isDefined": [Function],
          "isElement": [Function],
          "isFunction": [Function],
          "isNumber": [Function],
          "isObject": [Function],
          "isString": [Function],
          "isUndefined": [Function],
          "merge": [Function],
          "module": [Function],
          "noop": [Function],
          "reloadWithDebugInfo": [Function],
          "toJson": [Function],
          "version": Object {
            "codeName": "nested-vaccination",
            "dot": 0,
            "full": "1.8.0",
            "major": 1,
            "minor": 8,
          },
        }
      }
      bindings={
        Object {
          "availableFilters": undefined,
          "dataset": "bag",
          "filters": Object {},
          "geometryFilter": Object {},
          "isLoading": true,
          "numberOfRecords": 10,
          "showHeader": false,
          "user": Object {},
          "view": "TABLE",
        }
      }
      component="dpDataSelectionHeader"
      dependencies={
        Array [
          "atlas",
        ]
      }
      interpolateBindings={Object {}}
      moduleName="dpDataSelectionHeaderWrapper"
    />
    <Styled(Spinner) />
  </div>
</div>
`;

exports[`DataSelection should show authorization message if user has no permission 1`] = `
<div
  className="c-data-selection c-dashboard__content"
>
  <div
    className="c-data-selection-content qa-data-selection-content"
  >
    <AngularWrapper
      angularInstance={
        Object {
          "$$csp": [Function],
          "$$encodeUriQuery": [Function],
          "$$encodeUriSegment": [Function],
          "$$lowercase": [Function],
          "$$minErr": [Function],
          "$$stringify": [Function],
          "$$uppercase": [Function],
          "$interpolateMinErr": [Function],
          "UNSAFE_restoreLegacyJqLiteXHTMLReplacement": [Function],
          "bind": [Function],
          "bootstrap": [Function],
          "callbacks": Object {
            "$$counter": 0,
          },
          "copy": [Function],
          "element": [Function],
          "equals": [Function],
          "errorHandlingConfig": [Function],
          "extend": [Function],
          "forEach": [Function],
          "fromJson": [Function],
          "getTestability": [Function],
          "identity": [Function],
          "injector": [Function],
          "isArray": [Function],
          "isDate": [Function],
          "isDefined": [Function],
          "isElement": [Function],
          "isFunction": [Function],
          "isNumber": [Function],
          "isObject": [Function],
          "isString": [Function],
          "isUndefined": [Function],
          "merge": [Function],
          "module": [Function],
          "noop": [Function],
          "reloadWithDebugInfo": [Function],
          "toJson": [Function],
          "version": Object {
            "codeName": "nested-vaccination",
            "dot": 0,
            "full": "1.8.0",
            "major": 1,
            "minor": 8,
          },
        }
      }
      bindings={
        Object {
          "availableFilters": undefined,
          "dataset": "bag",
          "filters": Object {},
          "geometryFilter": Object {},
          "isLoading": false,
          "numberOfRecords": 10,
          "showHeader": true,
          "user": Object {},
          "view": "TABLE",
        }
      }
      component="dpDataSelectionHeader"
      dependencies={
        Array [
          "atlas",
        ]
      }
      interpolateBindings={Object {}}
      moduleName="dpDataSelectionHeaderWrapper"
    />
    <Connect(DataSelectionActiveFilters) />
    <Alert
      compact={true}
      dismissible={true}
      level="attention"
    >
      <Paragraph>
        Medewerkers/ketenpartners van Gemeente Amsterdam kunnen inloggen om maatschappelijke activiteiten en vestigingen te bekijken. 
      </Paragraph>
      <LoginLink />
    </Alert>
  </div>
</div>
`;

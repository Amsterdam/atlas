// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MapLeaflet component should render brkMarkers 1`] = `
<ResizeDetector
  handleHeigh={true}
  handleHeight={false}
  handleWidth={true}
  nodeType="div"
  onResize={[Function]}
  querySelector={null}
  refreshRate={1000}
  skipOnMount={false}
  style={
    Object {
      "bottom": "0",
      "left": "0",
      "position": "absolute",
      "right": "0",
      "top": "0",
    }
  }
  targetDomEl={null}
>
  <Map
    attributionControl={false}
    bounceAtZoomLimits={false}
    center={
      Array [
        52.3731081,
        4.8932945,
      ]
    }
    maxBounds={
      Array [
        Array [
          52.25168,
          4.64034,
        ],
        Array [
          52.50536,
          5.10737,
        ],
      ]
    }
    maxBoundsViscosity={1}
    onClick={[Function]}
    onDragEnd={[Function]}
    onLayerRemove={[Function]}
    onZoomEnd={[Function]}
    zoom={11}
    zoomControl={false}
  >
    <TileLayer
      bounds={
        Array [
          Array [
            52.25168,
            4.64034,
          ],
          Array [
            52.50536,
            5.10737,
          ],
        ]
      }
      maxZoom={16}
      minZoom={8}
      onLoad={[Function]}
      onLoading={[Function]}
      subdomains={
        Array [
          "acc.t1",
          "acc.t2",
          "acc.t3",
          "acc.t4",
        ]
      }
      tms={true}
      url="https://{s}.data.amsterdam.nl/topo_rd/{z}/{x}/{y}.png"
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "
      data-selection-cluster
      data-selection-cluster--zoomed-out
      data-selection-cluster--zoomed-out-1
    ",
            "html": "
      <div
        aria-label=\\"Cluster met 4 appartementen\\"
        class=\\"data-selection-cluster__text\\"
      >4</div>
    ",
            "iconAnchor": Array [
              7,
              7,
            ],
            "iconSize": Array [
              15,
              15,
            ],
            "popupAnchor": null,
          },
        }
      }
      key="52.378971546685705,4.854030078341637dataSelectionType"
      position={
        Array [
          52.378971546685705,
          4.854030078341637,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <ScaleControl
      imperial={false}
      metric={true}
      position="bottomright"
    />
    <ZoomControl
      position="bottomright"
      zoomInTitle="Inzoomen"
      zoomOutTitle="Uitzoomen"
    />
    <LoadingIndicator
      loading={false}
      showMapLink={true}
    />
  </Map>
</ResizeDetector>
`;

exports[`MapLeaflet component should render clusters 1`] = `
<ResizeDetector
  handleHeigh={true}
  handleHeight={false}
  handleWidth={true}
  nodeType="div"
  onResize={[Function]}
  querySelector={null}
  refreshRate={1000}
  skipOnMount={false}
  style={
    Object {
      "bottom": "0",
      "left": "0",
      "position": "absolute",
      "right": "0",
      "top": "0",
    }
  }
  targetDomEl={null}
>
  <Map
    attributionControl={false}
    bounceAtZoomLimits={false}
    center={
      Array [
        52.3731081,
        4.8932945,
      ]
    }
    maxBounds={
      Array [
        Array [
          52.25168,
          4.64034,
        ],
        Array [
          52.50536,
          5.10737,
        ],
      ]
    }
    maxBoundsViscosity={1}
    onClick={[Function]}
    onDragEnd={[Function]}
    onLayerRemove={[Function]}
    onZoomEnd={[Function]}
    zoom={11}
    zoomControl={false}
  >
    <TileLayer
      bounds={
        Array [
          Array [
            52.25168,
            4.64034,
          ],
          Array [
            52.50536,
            5.10737,
          ],
        ]
      }
      maxZoom={16}
      minZoom={8}
      onLoad={[Function]}
      onLoading={[Function]}
      subdomains={
        Array [
          "acc.t1",
          "acc.t2",
          "acc.t3",
          "acc.t4",
        ]
      }
      tms={true}
      url="https://{s}.data.amsterdam.nl/topo_rd/{z}/{x}/{y}.png"
    />
    <ClusterGroup
      animate={false}
      chunkedLoading={true}
      disableClusteringAtZoom={16}
      getMarkerGroupBounds={[Function]}
      iconCreateFunction={[Function]}
      markerOptions={
        Object {
          "icon": NewClass {
            "_initHooksCalled": true,
            "options": Object {
              "className": "dp-leaflet-detail-item",
              "iconAnchor": Array [
                10,
                10,
              ],
              "iconSize": Array [
                21,
                21,
              ],
              "iconUrl": "/assets/images/map/detail.svg",
              "popupAnchor": null,
              "shadowAnchor": null,
              "shadowSize": null,
              "shadowUrl": null,
            },
          },
        }
      }
      markers={
        Array [
          Object {
            "index": 0,
            "position": Array [
              52.37282671970971,
              4.883399484657262,
            ],
            "type": "detailPointType",
          },
          Object {
            "index": 1,
            "position": Array [
              52.37282671970951,
              4.883399484657232,
            ],
            "type": "detailPointType",
          },
          Object {
            "index": 2,
            "position": Array [
              52.37282671970952,
              4.883399484657263,
            ],
            "type": "detailPointType",
          },
          Object {
            "index": 3,
            "position": Array [
              52.37282671971952,
              4.883399484657263,
            ],
            "type": "detailPointType",
          },
        ]
      }
      maxClusterRadius={50}
      showCoverageOnHover={false}
      spiderfyOnMaxZoom={false}
    />
    <ScaleControl
      imperial={false}
      metric={true}
      position="bottomright"
    />
    <ZoomControl
      position="bottomright"
      zoomInTitle="Inzoomen"
      zoomOutTitle="Uitzoomen"
    />
    <LoadingIndicator
      loading={false}
      showMapLink={true}
    />
  </Map>
</ResizeDetector>
`;

exports[`MapLeaflet component should render clusters 2`] = `
<ResizeDetector
  handleHeigh={true}
  handleHeight={false}
  handleWidth={true}
  nodeType="div"
  onResize={[Function]}
  querySelector={null}
  refreshRate={1000}
  skipOnMount={false}
  style={
    Object {
      "bottom": "0",
      "left": "0",
      "position": "absolute",
      "right": "0",
      "top": "0",
    }
  }
  targetDomEl={null}
>
  <Map
    attributionControl={false}
    bounceAtZoomLimits={false}
    center={
      Array [
        52.3731081,
        4.8932945,
      ]
    }
    maxBounds={
      Array [
        Array [
          52.25168,
          4.64034,
        ],
        Array [
          52.50536,
          5.10737,
        ],
      ]
    }
    maxBoundsViscosity={1}
    onClick={[Function]}
    onDragEnd={[Function]}
    onLayerRemove={[Function]}
    onZoomEnd={[Function]}
    zoom={9}
    zoomControl={false}
  >
    <TileLayer
      bounds={
        Array [
          Array [
            52.25168,
            4.64034,
          ],
          Array [
            52.50536,
            5.10737,
          ],
        ]
      }
      maxZoom={16}
      minZoom={8}
      onLoad={[Function]}
      onLoading={[Function]}
      subdomains={
        Array [
          "acc.t1",
          "acc.t2",
          "acc.t3",
          "acc.t4",
        ]
      }
      tms={true}
      url="https://{s}.data.amsterdam.nl/topo_rd/{z}/{x}/{y}.png"
    />
    <ClusterGroup
      animate={false}
      chunkedLoading={true}
      disableClusteringAtZoom={16}
      getMarkerGroupBounds={[Function]}
      iconCreateFunction={[Function]}
      markerOptions={
        Object {
          "icon": NewClass {
            "_initHooksCalled": true,
            "options": Object {
              "className": "dp-leaflet-detail-item",
              "iconAnchor": Array [
                10,
                10,
              ],
              "iconSize": Array [
                21,
                21,
              ],
              "iconUrl": "/assets/images/map/detail.svg",
              "popupAnchor": null,
              "shadowAnchor": null,
              "shadowSize": null,
              "shadowUrl": null,
            },
          },
        }
      }
      markers={
        Array [
          Object {
            "index": 0,
            "position": Array [
              52.37282671970971,
              4.883399484657262,
            ],
            "type": "detailPointType",
          },
          Object {
            "index": 1,
            "position": Array [
              52.37282671970951,
              4.883399484657232,
            ],
            "type": "detailPointType",
          },
          Object {
            "index": 2,
            "position": Array [
              52.37282671970952,
              4.883399484657263,
            ],
            "type": "detailPointType",
          },
          Object {
            "index": 3,
            "position": Array [
              52.37282671971952,
              4.883399484657263,
            ],
            "type": "detailPointType",
          },
        ]
      }
      maxClusterRadius={50}
      showCoverageOnHover={false}
      spiderfyOnMaxZoom={false}
    />
    <ScaleControl
      imperial={false}
      metric={true}
      position="bottomright"
    />
    <ZoomControl
      position="bottomright"
      zoomInTitle="Inzoomen"
      zoomOutTitle="Uitzoomen"
    />
    <LoadingIndicator
      loading={false}
      showMapLink={true}
    />
  </Map>
</ResizeDetector>
`;

exports[`MapLeaflet component should render map with base layer and update base layer if props change 1`] = `
<ResizeDetector
  handleHeigh={true}
  handleHeight={false}
  handleWidth={true}
  nodeType="div"
  onResize={[Function]}
  querySelector={null}
  refreshRate={1000}
  skipOnMount={false}
  style={
    Object {
      "bottom": "0",
      "left": "0",
      "position": "absolute",
      "right": "0",
      "top": "0",
    }
  }
  targetDomEl={null}
>
  <Map
    attributionControl={false}
    bounceAtZoomLimits={false}
    center={
      Array [
        52.3731081,
        4.8932945,
      ]
    }
    maxBounds={
      Array [
        Array [
          52.25168,
          4.64034,
        ],
        Array [
          52.50536,
          5.10737,
        ],
      ]
    }
    maxBoundsViscosity={1}
    onClick={[Function]}
    onDragEnd={[Function]}
    onLayerRemove={[Function]}
    onZoomEnd={[Function]}
    zoom={11}
    zoomControl={false}
  >
    <TileLayer
      bounds={
        Array [
          Array [
            52.25168,
            4.64034,
          ],
          Array [
            52.50536,
            5.10737,
          ],
        ]
      }
      maxZoom={16}
      minZoom={8}
      onLoad={[Function]}
      onLoading={[Function]}
      subdomains={
        Array [
          "acc.t1",
          "acc.t2",
          "acc.t3",
          "acc.t4",
        ]
      }
      tms={true}
      url="https://{s}.data.amsterdam.nl/topo_rd/{z}/{x}/{y}.png"
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "dp-leaflet-location-icon",
            "iconAnchor": Array [
              10,
              10,
            ],
            "iconSize": Array [
              30,
              30,
            ],
            "iconUrl": "/assets/images/map/location.svg",
            "popupAnchor": null,
            "shadowAnchor": null,
            "shadowSize": null,
            "shadowUrl": null,
          },
        }
      }
      key="[object Object]"
      position={
        Array [
          52.3731081,
          4.8932945,
        ]
      }
    />
    <ScaleControl
      imperial={false}
      metric={true}
      position="bottomright"
    />
    <ZoomControl
      position="bottomright"
      zoomInTitle="Inzoomen"
      zoomOutTitle="Uitzoomen"
    />
    <LoadingIndicator
      loading={false}
      showMapLink={true}
    />
  </Map>
</ResizeDetector>
`;

exports[`MapLeaflet component should render map with base layer and update base layer if props change 2`] = `
<ResizeDetector
  handleHeigh={true}
  handleHeight={false}
  handleWidth={true}
  nodeType="div"
  onResize={[Function]}
  querySelector={null}
  refreshRate={1000}
  skipOnMount={false}
  style={
    Object {
      "bottom": "0",
      "left": "0",
      "position": "absolute",
      "right": "0",
      "top": "0",
    }
  }
  targetDomEl={null}
>
  <Map
    attributionControl={false}
    bounceAtZoomLimits={false}
    center={
      Array [
        52.3731081,
        4.8932945,
      ]
    }
    maxBounds={
      Array [
        Array [
          52.25168,
          4.64034,
        ],
        Array [
          52.50536,
          5.10737,
        ],
      ]
    }
    maxBoundsViscosity={1}
    onClick={[Function]}
    onDragEnd={[Function]}
    onLayerRemove={[Function]}
    onZoomEnd={[Function]}
    zoom={11}
    zoomControl={false}
  >
    <TileLayer
      bounds={
        Array [
          Array [
            52.25168,
            4.64034,
          ],
          Array [
            52.50536,
            5.10737,
          ],
        ]
      }
      maxZoom={16}
      minZoom={8}
      onLoad={[Function]}
      onLoading={[Function]}
      subdomains={
        Array [
          "acc.t1",
          "acc.t2",
          "acc.t3",
          "acc.t4",
        ]
      }
      tms={true}
      url="https://{s}.data.amsterdam.nl/lufo2017_RD/{z}/{x}/{y}.jpeg"
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "dp-leaflet-location-icon",
            "iconAnchor": Array [
              10,
              10,
            ],
            "iconSize": Array [
              30,
              30,
            ],
            "iconUrl": "/assets/images/map/location.svg",
            "popupAnchor": null,
            "shadowAnchor": null,
            "shadowSize": null,
            "shadowUrl": null,
          },
        }
      }
      key="[object Object]"
      position={
        Array [
          52.3731081,
          4.8932945,
        ]
      }
    />
    <ScaleControl
      imperial={false}
      metric={true}
      position="bottomright"
    />
    <ZoomControl
      position="bottomright"
      zoomInTitle="Inzoomen"
      zoomOutTitle="Uitzoomen"
    />
    <LoadingIndicator
      loading={false}
      showMapLink={true}
    />
  </Map>
</ResizeDetector>
`;

exports[`MapLeaflet component should render map with coordinates in lat/lon 1`] = `
<ResizeDetector
  handleHeigh={true}
  handleHeight={false}
  handleWidth={true}
  nodeType="div"
  onResize={[Function]}
  querySelector={null}
  refreshRate={1000}
  skipOnMount={false}
  style={
    Object {
      "bottom": "0",
      "left": "0",
      "position": "absolute",
      "right": "0",
      "top": "0",
    }
  }
  targetDomEl={null}
>
  <Map
    attributionControl={false}
    bounceAtZoomLimits={false}
    center={
      Array [
        52.3731081,
        4.8932945,
      ]
    }
    maxBounds={
      Array [
        Array [
          52.25168,
          4.64034,
        ],
        Array [
          52.50536,
          5.10737,
        ],
      ]
    }
    maxBoundsViscosity={1}
    onClick={[Function]}
    onDragEnd={[Function]}
    onLayerRemove={[Function]}
    onZoomEnd={[Function]}
    zoom={11}
    zoomControl={false}
  >
    <TileLayer
      bounds={
        Array [
          Array [
            52.25168,
            4.64034,
          ],
          Array [
            52.50536,
            5.10737,
          ],
        ]
      }
      maxZoom={16}
      minZoom={8}
      onLoad={[Function]}
      onLoading={[Function]}
      subdomains={
        Array [
          "acc.t1",
          "acc.t2",
          "acc.t3",
          "acc.t4",
        ]
      }
      tms={true}
      url="https://{s}.data.amsterdam.nl/topo_rd/{z}/{x}/{y}.png"
    />
    <ScaleControl
      imperial={false}
      metric={true}
      position="bottomright"
    />
    <ZoomControl
      position="bottomright"
      zoomInTitle="Inzoomen"
      zoomOutTitle="Uitzoomen"
    />
    <LoadingIndicator
      loading={false}
      showMapLink={true}
    />
  </Map>
</ResizeDetector>
`;

exports[`MapLeaflet component should render map with coordinates in lat/lon 2`] = `
<ResizeDetector
  handleHeigh={true}
  handleHeight={false}
  handleWidth={true}
  nodeType="div"
  onResize={[Function]}
  querySelector={null}
  refreshRate={1000}
  skipOnMount={false}
  style={
    Object {
      "bottom": "0",
      "left": "0",
      "position": "absolute",
      "right": "0",
      "top": "0",
    }
  }
  targetDomEl={null}
>
  <Map
    attributionControl={false}
    bounceAtZoomLimits={false}
    center={
      Array [
        52.3731081,
        4.8932945,
      ]
    }
    maxBounds={
      Array [
        Array [
          52.25168,
          4.64034,
        ],
        Array [
          52.50536,
          5.10737,
        ],
      ]
    }
    maxBoundsViscosity={1}
    onClick={[Function]}
    onDragEnd={[Function]}
    onLayerRemove={[Function]}
    onZoomEnd={[Function]}
    zoom={11}
    zoomControl={false}
  >
    <TileLayer
      bounds={
        Array [
          Array [
            52.25168,
            4.64034,
          ],
          Array [
            52.50536,
            5.10737,
          ],
        ]
      }
      maxZoom={16}
      minZoom={8}
      onLoad={[Function]}
      onLoading={[Function]}
      subdomains={
        Array [
          "acc.t1",
          "acc.t2",
          "acc.t3",
          "acc.t4",
        ]
      }
      tms={true}
      url="https://{s}.data.amsterdam.nl/topo_rd/{z}/{x}/{y}.png"
    />
    <NonTiledLayer
      format="image/png"
      identify={false}
      key="biz"
      layers={
        Array [
          "biz_polygons",
        ]
      }
      onLoad={[Function]}
      onLoading={[Function]}
      opacity={100}
      url="https://acc.map.data.amsterdam.nl/maps/biz"
    />
    <GeoJSON
      data={
        Object {
          "coordinates": Array [
            120983,
            487047,
          ],
          "type": "Point",
        }
      }
      key="YE39"
      style={
        Object {
          "color": "#ec0000",
          "fillOpacity": 0.33,
          "weight": 1,
        }
      }
    />
    <GeoJSON
      data={
        Object {
          "coordinates": Array [
            120983,
            487047,
          ],
          "type": "Point",
        }
      }
      key="YE39"
      style={
        Object {
          "color": "#ec0000",
          "dashArray": "3 6",
          "fillOpacity": 0.17,
          "weight": 2,
        }
      }
    />
    <GeoJSON
      data={
        Object {
          "coordinates": Array [
            Array [
              Array [
                115689.261,
                488181.641,
              ],
            ],
            Array [
              Array [
                115697.26,
                488181.8,
              ],
            ],
            Array [
              Array [
                115705.37,
                488181.959,
              ],
            ],
            Array [
              Array [
                115705.522,
                488173.844,
              ],
            ],
            Array [
              Array [
                115705.67,
                488165.845,
              ],
            ],
            Array [
              Array [
                115705.819,
                488157.847,
              ],
            ],
            Array [
              Array [
                115705.969,
                488149.729,
              ],
            ],
            Array [
              Array [
                115697.865,
                488149.576,
              ],
            ],
            Array [
              Array [
                115689.866,
                488149.424,
              ],
            ],
            Array [
              Array [
                115681.759,
                488149.269,
              ],
            ],
            Array [
              Array [
                115681.15,
                488181.479,
              ],
            ],
            Array [
              Array [
                115689.261,
                488181.641,
              ],
            ],
          ],
          "type": "Polygon",
        }
      }
      key="YE39"
      style={
        Object {
          "color": "#ec0000",
          "fillOpacity": 0,
          "opacity": 0,
          "weight": 1,
        }
      }
    />
    <ScaleControl
      imperial={false}
      metric={true}
      position="bottomright"
    />
    <ZoomControl
      position="bottomright"
      zoomInTitle="Inzoomen"
      zoomOutTitle="Uitzoomen"
    />
    <LoadingIndicator
      loading={false}
      showMapLink={true}
    />
  </Map>
</ResizeDetector>
`;

exports[`MapLeaflet component should render map with coordinates in lat/lon 3`] = `
<ResizeDetector
  handleHeigh={true}
  handleHeight={false}
  handleWidth={true}
  nodeType="div"
  onResize={[Function]}
  querySelector={null}
  refreshRate={1000}
  skipOnMount={false}
  style={
    Object {
      "bottom": "0",
      "left": "0",
      "position": "absolute",
      "right": "0",
      "top": "0",
    }
  }
  targetDomEl={null}
>
  <Map
    attributionControl={false}
    bounceAtZoomLimits={false}
    center={
      Array [
        52.3731081,
        4.8932945,
      ]
    }
    maxBounds={
      Array [
        Array [
          52.25168,
          4.64034,
        ],
        Array [
          52.50536,
          5.10737,
        ],
      ]
    }
    maxBoundsViscosity={1}
    onClick={[Function]}
    onDragEnd={[Function]}
    onLayerRemove={[Function]}
    onZoomEnd={[Function]}
    zoom={11}
    zoomControl={false}
  >
    <TileLayer
      bounds={
        Array [
          Array [
            52.25168,
            4.64034,
          ],
          Array [
            52.50536,
            5.10737,
          ],
        ]
      }
      maxZoom={16}
      minZoom={8}
      onLoad={[Function]}
      onLoading={[Function]}
      subdomains={
        Array [
          "acc.t1",
          "acc.t2",
          "acc.t3",
          "acc.t4",
        ]
      }
      tms={true}
      url="https://{s}.data.amsterdam.nl/topo_rd/{z}/{x}/{y}.png"
    />
    <NonTiledLayer
      format="image/png"
      identify={false}
      key="bbn"
      layers={
        Array [
          "bouwblok",
          "bouwblok_label",
        ]
      }
      onLoad={[Function]}
      onLoading={[Function]}
      opacity={100}
      url="https://acc.map.data.amsterdam.nl/maps/gebieden?service=wms"
    />
    <GeoJSON
      data={
        Object {
          "coordinates": Array [
            Array [
              Array [
                Array [
                  Array [
                    115689.261,
                    488181.641,
                  ],
                ],
                Array [
                  Array [
                    115697.26,
                    488181.8,
                  ],
                ],
                Array [
                  Array [
                    115705.37,
                    488181.959,
                  ],
                ],
                Array [
                  Array [
                    115705.522,
                    488173.844,
                  ],
                ],
                Array [
                  Array [
                    115705.67,
                    488165.845,
                  ],
                ],
                Array [
                  Array [
                    115705.819,
                    488157.847,
                  ],
                ],
                Array [
                  Array [
                    115705.969,
                    488149.729,
                  ],
                ],
                Array [
                  Array [
                    115697.865,
                    488149.576,
                  ],
                ],
                Array [
                  Array [
                    115689.866,
                    488149.424,
                  ],
                ],
                Array [
                  Array [
                    115681.759,
                    488149.269,
                  ],
                ],
                Array [
                  Array [
                    115681.15,
                    488181.479,
                  ],
                ],
                Array [
                  Array [
                    115689.261,
                    488181.641,
                  ],
                ],
              ],
            ],
          ],
          "type": "MultiPolygon",
        }
      }
      key="YE39"
      style={
        Object {
          "color": "#ec0000",
          "fillOpacity": 0.33,
          "weight": 1,
        }
      }
    />
    <ScaleControl
      imperial={false}
      metric={true}
      position="bottomright"
    />
    <ZoomControl
      position="bottomright"
      zoomInTitle="Inzoomen"
      zoomOutTitle="Uitzoomen"
    />
    <LoadingIndicator
      loading={false}
      showMapLink={true}
    />
  </Map>
</ResizeDetector>
`;

exports[`MapLeaflet component should render map with geoJSON with RD coordinates 1`] = `
<ResizeDetector
  handleHeigh={true}
  handleHeight={false}
  handleWidth={true}
  nodeType="div"
  onResize={[Function]}
  querySelector={null}
  refreshRate={1000}
  skipOnMount={false}
  style={
    Object {
      "bottom": "0",
      "left": "0",
      "position": "absolute",
      "right": "0",
      "top": "0",
    }
  }
  targetDomEl={null}
>
  <Map
    attributionControl={false}
    bounceAtZoomLimits={false}
    center={
      Array [
        52.3731081,
        4.8932945,
      ]
    }
    maxBounds={
      Array [
        Array [
          52.25168,
          4.64034,
        ],
        Array [
          52.50536,
          5.10737,
        ],
      ]
    }
    maxBoundsViscosity={1}
    onClick={[Function]}
    onDragEnd={[Function]}
    onLayerRemove={[Function]}
    onZoomEnd={[Function]}
    zoom={11}
    zoomControl={false}
  >
    <TileLayer
      bounds={
        Array [
          Array [
            52.25168,
            4.64034,
          ],
          Array [
            52.50536,
            5.10737,
          ],
        ]
      }
      maxZoom={16}
      minZoom={8}
      onLoad={[Function]}
      onLoading={[Function]}
      subdomains={
        Array [
          "acc.t1",
          "acc.t2",
          "acc.t3",
          "acc.t4",
        ]
      }
      tms={true}
      url="https://{s}.data.amsterdam.nl/topo_rd/{z}/{x}/{y}.png"
    />
    <ScaleControl
      imperial={false}
      metric={true}
      position="bottomright"
    />
    <ZoomControl
      position="bottomright"
      zoomInTitle="Inzoomen"
      zoomOutTitle="Uitzoomen"
    />
    <LoadingIndicator
      loading={false}
      showMapLink={true}
    />
  </Map>
</ResizeDetector>
`;

exports[`MapLeaflet component should render map with geoJSON with RD coordinates 2`] = `
<ResizeDetector
  handleHeigh={true}
  handleHeight={false}
  handleWidth={true}
  nodeType="div"
  onResize={[Function]}
  querySelector={null}
  refreshRate={1000}
  skipOnMount={false}
  style={
    Object {
      "bottom": "0",
      "left": "0",
      "position": "absolute",
      "right": "0",
      "top": "0",
    }
  }
  targetDomEl={null}
>
  <Map
    attributionControl={false}
    bounceAtZoomLimits={false}
    center={
      Array [
        52.3731081,
        4.8932945,
      ]
    }
    maxBounds={
      Array [
        Array [
          52.25168,
          4.64034,
        ],
        Array [
          52.50536,
          5.10737,
        ],
      ]
    }
    maxBoundsViscosity={1}
    onClick={[Function]}
    onDragEnd={[Function]}
    onLayerRemove={[Function]}
    onZoomEnd={[Function]}
    zoom={11}
    zoomControl={false}
  >
    <TileLayer
      bounds={
        Array [
          Array [
            52.25168,
            4.64034,
          ],
          Array [
            52.50536,
            5.10737,
          ],
        ]
      }
      maxZoom={16}
      minZoom={8}
      onLoad={[Function]}
      onLoading={[Function]}
      subdomains={
        Array [
          "acc.t1",
          "acc.t2",
          "acc.t3",
          "acc.t4",
        ]
      }
      tms={true}
      url="https://{s}.data.amsterdam.nl/topo_rd/{z}/{x}/{y}.png"
    />
    <NonTiledLayer
      format="image/png"
      identify={false}
      key="biz"
      layers={
        Array [
          "biz_polygons",
        ]
      }
      onLoad={[Function]}
      onLoading={[Function]}
      opacity={0}
      url="https://acc.map.data.amsterdam.nl/maps/biz"
    />
    <RdGeoJson
      data={
        Object {
          "geometry": Object {
            "coordinates": Array [
              120983,
              487047,
            ],
            "type": "Point",
          },
        }
      }
      key="YE39"
    />
    <ScaleControl
      imperial={false}
      metric={true}
      position="bottomright"
    />
    <ZoomControl
      position="bottomright"
      zoomInTitle="Inzoomen"
      zoomOutTitle="Uitzoomen"
    />
    <LoadingIndicator
      loading={false}
      showMapLink={true}
    />
  </Map>
</ResizeDetector>
`;

exports[`MapLeaflet component should render map with geoJSON with RD coordinates 3`] = `
<ResizeDetector
  handleHeigh={true}
  handleHeight={false}
  handleWidth={true}
  nodeType="div"
  onResize={[Function]}
  querySelector={null}
  refreshRate={1000}
  skipOnMount={false}
  style={
    Object {
      "bottom": "0",
      "left": "0",
      "position": "absolute",
      "right": "0",
      "top": "0",
    }
  }
  targetDomEl={null}
>
  <Map
    attributionControl={false}
    bounceAtZoomLimits={false}
    center={
      Array [
        52.3731081,
        4.8932945,
      ]
    }
    maxBounds={
      Array [
        Array [
          52.25168,
          4.64034,
        ],
        Array [
          52.50536,
          5.10737,
        ],
      ]
    }
    maxBoundsViscosity={1}
    onClick={[Function]}
    onDragEnd={[Function]}
    onLayerRemove={[Function]}
    onZoomEnd={[Function]}
    zoom={11}
    zoomControl={false}
  >
    <TileLayer
      bounds={
        Array [
          Array [
            52.25168,
            4.64034,
          ],
          Array [
            52.50536,
            5.10737,
          ],
        ]
      }
      maxZoom={16}
      minZoom={8}
      onLoad={[Function]}
      onLoading={[Function]}
      subdomains={
        Array [
          "acc.t1",
          "acc.t2",
          "acc.t3",
          "acc.t4",
        ]
      }
      tms={true}
      url="https://{s}.data.amsterdam.nl/topo_rd/{z}/{x}/{y}.png"
    />
    <NonTiledLayer
      format="image/png"
      identify={false}
      key="biz"
      layers={
        Array [
          "biz_polygons",
        ]
      }
      onLoad={[Function]}
      onLoading={[Function]}
      opacity={0}
      url="https://acc.map.data.amsterdam.nl/maps/biz"
    />
    <RdGeoJson
      data={
        Object {
          "geometry": Object {
            "coordinates": Array [
              120983,
              487047,
            ],
            "type": "Point",
          },
          "label": "Adres YE39",
        }
      }
      key="YE39"
    />
    <ScaleControl
      imperial={false}
      metric={true}
      position="bottomright"
    />
    <ZoomControl
      position="bottomright"
      zoomInTitle="Inzoomen"
      zoomOutTitle="Uitzoomen"
    />
    <LoadingIndicator
      loading={false}
      showMapLink={true}
    />
  </Map>
</ResizeDetector>
`;

exports[`MapLeaflet component should render map with geoJSON with RD coordinates 4`] = `
<ResizeDetector
  handleHeigh={true}
  handleHeight={false}
  handleWidth={true}
  nodeType="div"
  onResize={[Function]}
  querySelector={null}
  refreshRate={1000}
  skipOnMount={false}
  style={
    Object {
      "bottom": "0",
      "left": "0",
      "position": "absolute",
      "right": "0",
      "top": "0",
    }
  }
  targetDomEl={null}
>
  <Map
    attributionControl={false}
    bounceAtZoomLimits={false}
    center={
      Array [
        52.3731081,
        4.8932945,
      ]
    }
    maxBounds={
      Array [
        Array [
          52.25168,
          4.64034,
        ],
        Array [
          52.50536,
          5.10737,
        ],
      ]
    }
    maxBoundsViscosity={1}
    onClick={[Function]}
    onDragEnd={[Function]}
    onLayerRemove={[Function]}
    onZoomEnd={[Function]}
    zoom={11}
    zoomControl={false}
  >
    <TileLayer
      bounds={
        Array [
          Array [
            52.25168,
            4.64034,
          ],
          Array [
            52.50536,
            5.10737,
          ],
        ]
      }
      maxZoom={16}
      minZoom={8}
      onLoad={[Function]}
      onLoading={[Function]}
      subdomains={
        Array [
          "acc.t1",
          "acc.t2",
          "acc.t3",
          "acc.t4",
        ]
      }
      tms={true}
      url="https://{s}.data.amsterdam.nl/topo_rd/{z}/{x}/{y}.png"
    />
    <NonTiledLayer
      format="image/png"
      identify={false}
      key="bbn"
      layers={
        Array [
          "bouwblok",
          "bouwblok_label",
        ]
      }
      onLoad={[Function]}
      onLoading={[Function]}
      opacity={100}
      url="https://acc.map.data.amsterdam.nl/maps/gebieden?service=wms"
    />
    <RdGeoJson
      data={
        Object {
          "geometry": Object {
            "coordinates": Array [
              Array [
                Array [
                  Array [
                    Array [
                      115689.261,
                      488181.641,
                    ],
                  ],
                  Array [
                    Array [
                      115697.26,
                      488181.8,
                    ],
                  ],
                  Array [
                    Array [
                      115705.37,
                      488181.959,
                    ],
                  ],
                  Array [
                    Array [
                      115705.522,
                      488173.844,
                    ],
                  ],
                  Array [
                    Array [
                      115705.67,
                      488165.845,
                    ],
                  ],
                  Array [
                    Array [
                      115705.819,
                      488157.847,
                    ],
                  ],
                  Array [
                    Array [
                      115705.969,
                      488149.729,
                    ],
                  ],
                  Array [
                    Array [
                      115697.865,
                      488149.576,
                    ],
                  ],
                  Array [
                    Array [
                      115689.866,
                      488149.424,
                    ],
                  ],
                  Array [
                    Array [
                      115681.759,
                      488149.269,
                    ],
                  ],
                  Array [
                    Array [
                      115681.15,
                      488181.479,
                    ],
                  ],
                  Array [
                    Array [
                      115689.261,
                      488181.641,
                    ],
                  ],
                ],
              ],
            ],
            "type": "MultiPolygon",
          },
          "label": "Object YE39",
        }
      }
      key="YE39"
    />
    <ScaleControl
      imperial={false}
      metric={true}
      position="bottomright"
    />
    <ZoomControl
      position="bottomright"
      zoomInTitle="Inzoomen"
      zoomOutTitle="Uitzoomen"
    />
    <LoadingIndicator
      loading={false}
      showMapLink={true}
    />
  </Map>
</ResizeDetector>
`;

exports[`MapLeaflet component should render map with without layers and add/remove layers if props change 1`] = `
<ResizeDetector
  handleHeigh={true}
  handleHeight={false}
  handleWidth={true}
  nodeType="div"
  onResize={[Function]}
  querySelector={null}
  refreshRate={1000}
  skipOnMount={false}
  style={
    Object {
      "bottom": "0",
      "left": "0",
      "position": "absolute",
      "right": "0",
      "top": "0",
    }
  }
  targetDomEl={null}
>
  <Map
    attributionControl={false}
    bounceAtZoomLimits={false}
    center={
      Array [
        52.3731081,
        4.8932945,
      ]
    }
    maxBounds={
      Array [
        Array [
          52.25168,
          4.64034,
        ],
        Array [
          52.50536,
          5.10737,
        ],
      ]
    }
    maxBoundsViscosity={1}
    onClick={[Function]}
    onDragEnd={[Function]}
    onLayerRemove={[Function]}
    onZoomEnd={[Function]}
    zoom={11}
    zoomControl={false}
  >
    <TileLayer
      bounds={
        Array [
          Array [
            52.25168,
            4.64034,
          ],
          Array [
            52.50536,
            5.10737,
          ],
        ]
      }
      maxZoom={16}
      minZoom={8}
      onLoad={[Function]}
      onLoading={[Function]}
      subdomains={
        Array [
          "acc.t1",
          "acc.t2",
          "acc.t3",
          "acc.t4",
        ]
      }
      tms={true}
      url="https://{s}.data.amsterdam.nl/topo_rd/{z}/{x}/{y}.png"
    />
    <ScaleControl
      imperial={false}
      metric={true}
      position="bottomright"
    />
    <ZoomControl
      position="bottomright"
      zoomInTitle="Inzoomen"
      zoomOutTitle="Uitzoomen"
    />
    <LoadingIndicator
      loading={false}
      showMapLink={true}
    />
  </Map>
</ResizeDetector>
`;

exports[`MapLeaflet component should render map with without layers and add/remove layers if props change 2`] = `
<ResizeDetector
  handleHeigh={true}
  handleHeight={false}
  handleWidth={true}
  nodeType="div"
  onResize={[Function]}
  querySelector={null}
  refreshRate={1000}
  skipOnMount={false}
  style={
    Object {
      "bottom": "0",
      "left": "0",
      "position": "absolute",
      "right": "0",
      "top": "0",
    }
  }
  targetDomEl={null}
>
  <Map
    attributionControl={false}
    bounceAtZoomLimits={false}
    center={
      Array [
        52.3731081,
        4.8932945,
      ]
    }
    maxBounds={
      Array [
        Array [
          52.25168,
          4.64034,
        ],
        Array [
          52.50536,
          5.10737,
        ],
      ]
    }
    maxBoundsViscosity={1}
    onClick={[Function]}
    onDragEnd={[Function]}
    onLayerRemove={[Function]}
    onZoomEnd={[Function]}
    zoom={11}
    zoomControl={false}
  >
    <TileLayer
      bounds={
        Array [
          Array [
            52.25168,
            4.64034,
          ],
          Array [
            52.50536,
            5.10737,
          ],
        ]
      }
      maxZoom={16}
      minZoom={8}
      onLoad={[Function]}
      onLoading={[Function]}
      subdomains={
        Array [
          "acc.t1",
          "acc.t2",
          "acc.t3",
          "acc.t4",
        ]
      }
      tms={true}
      url="https://{s}.data.amsterdam.nl/topo_rd/{z}/{x}/{y}.png"
    />
    <NonTiledLayer
      format="image/png"
      identify={false}
      key="biz"
      layers={
        Array [
          "biz_polygons",
        ]
      }
      onLoad={[Function]}
      onLoading={[Function]}
      opacity={100}
      url="https://acc.map.data.amsterdam.nl/maps/biz"
    />
    <ScaleControl
      imperial={false}
      metric={true}
      position="bottomright"
    />
    <ZoomControl
      position="bottomright"
      zoomInTitle="Inzoomen"
      zoomOutTitle="Uitzoomen"
    />
    <LoadingIndicator
      loading={false}
      showMapLink={true}
    />
  </Map>
</ResizeDetector>
`;

exports[`MapLeaflet component should render map with without layers and add/remove layers if props change 3`] = `
<ResizeDetector
  handleHeigh={true}
  handleHeight={false}
  handleWidth={true}
  nodeType="div"
  onResize={[Function]}
  querySelector={null}
  refreshRate={1000}
  skipOnMount={false}
  style={
    Object {
      "bottom": "0",
      "left": "0",
      "position": "absolute",
      "right": "0",
      "top": "0",
    }
  }
  targetDomEl={null}
>
  <Map
    attributionControl={false}
    bounceAtZoomLimits={false}
    center={
      Array [
        52.3731081,
        4.8932945,
      ]
    }
    maxBounds={
      Array [
        Array [
          52.25168,
          4.64034,
        ],
        Array [
          52.50536,
          5.10737,
        ],
      ]
    }
    maxBoundsViscosity={1}
    onClick={[Function]}
    onDragEnd={[Function]}
    onLayerRemove={[Function]}
    onZoomEnd={[Function]}
    zoom={11}
    zoomControl={false}
  >
    <TileLayer
      bounds={
        Array [
          Array [
            52.25168,
            4.64034,
          ],
          Array [
            52.50536,
            5.10737,
          ],
        ]
      }
      maxZoom={16}
      minZoom={8}
      onLoad={[Function]}
      onLoading={[Function]}
      subdomains={
        Array [
          "acc.t1",
          "acc.t2",
          "acc.t3",
          "acc.t4",
        ]
      }
      tms={true}
      url="https://{s}.data.amsterdam.nl/topo_rd/{z}/{x}/{y}.png"
    />
    <ScaleControl
      imperial={false}
      metric={true}
      position="bottomright"
    />
    <ZoomControl
      position="bottomright"
      zoomInTitle="Inzoomen"
      zoomOutTitle="Uitzoomen"
    />
    <LoadingIndicator
      loading={false}
      showMapLink={true}
    />
  </Map>
</ResizeDetector>
`;

exports[`MapLeaflet component should render markers 1`] = `
<ResizeDetector
  handleHeigh={true}
  handleHeight={false}
  handleWidth={true}
  nodeType="div"
  onResize={[Function]}
  querySelector={null}
  refreshRate={1000}
  skipOnMount={false}
  style={
    Object {
      "bottom": "0",
      "left": "0",
      "position": "absolute",
      "right": "0",
      "top": "0",
    }
  }
  targetDomEl={null}
>
  <Map
    attributionControl={false}
    bounceAtZoomLimits={false}
    center={
      Array [
        52.3731081,
        4.8932945,
      ]
    }
    maxBounds={
      Array [
        Array [
          52.25168,
          4.64034,
        ],
        Array [
          52.50536,
          5.10737,
        ],
      ]
    }
    maxBoundsViscosity={1}
    onClick={[Function]}
    onDragEnd={[Function]}
    onLayerRemove={[Function]}
    onZoomEnd={[Function]}
    zoom={11}
    zoomControl={false}
  >
    <TileLayer
      bounds={
        Array [
          Array [
            52.25168,
            4.64034,
          ],
          Array [
            52.50536,
            5.10737,
          ],
        ]
      }
      maxZoom={16}
      minZoom={8}
      onLoad={[Function]}
      onLoading={[Function]}
      subdomains={
        Array [
          "acc.t1",
          "acc.t2",
          "acc.t3",
          "acc.t4",
        ]
      }
      tms={true}
      url="https://{s}.data.amsterdam.nl/topo_rd/{z}/{x}/{y}.png"
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "dp-leaflet-search-icon",
            "iconAnchor": Array [
              23,
              65,
            ],
            "iconSize": Array [
              48,
              77,
            ],
            "iconUrl": "/assets/images/map/search.svg",
            "popupAnchor": null,
            "shadowAnchor": null,
            "shadowSize": null,
            "shadowUrl": null,
          },
        }
      }
      key="52.37282671970971,4.883399484657262geoSearchType"
      position={
        Array [
          52.37282671970971,
          4.883399484657262,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "dp-leaflet-detail-item",
            "iconAnchor": Array [
              10,
              10,
            ],
            "iconSize": Array [
              21,
              21,
            ],
            "iconUrl": "/assets/images/map/detail.svg",
            "popupAnchor": null,
            "shadowAnchor": null,
            "shadowSize": null,
            "shadowUrl": null,
          },
        }
      }
      key="52.37282671970951,4.883399484657232detailPointType"
      position={
        Array [
          52.37282671970951,
          4.883399484657232,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "
      data-selection-cluster
      data-selection-cluster--zoomed-out
      data-selection-cluster--zoomed-out-point
    ",
            "html": "
      <div
        aria-label=\\"Cluster met 1 appartementen\\"
        class=\\"data-selection-cluster__text\\"
      ></div>
    ",
            "iconAnchor": Array [
              7,
              7,
            ],
            "iconSize": Array [
              15,
              15,
            ],
            "popupAnchor": null,
          },
        }
      }
      key="52.37282671970952,4.883399484657263dataSelectionType"
      position={
        Array [
          52.37282671970952,
          4.883399484657263,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "
      data-selection-cluster
      data-selection-cluster--zoomed-out
      data-selection-cluster--zoomed-out-1
    ",
            "html": "
      <div
        aria-label=\\"Cluster met 9 appartementen\\"
        class=\\"data-selection-cluster__text\\"
      >9</div>
    ",
            "iconAnchor": Array [
              7,
              7,
            ],
            "iconSize": Array [
              15,
              15,
            ],
            "popupAnchor": null,
          },
        }
      }
      key="52.37282671970952,4.883399484657263dataSelectionType"
      position={
        Array [
          52.37282671970952,
          4.883399484657263,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "
      data-selection-cluster
      data-selection-cluster--zoomed-out
      data-selection-cluster--zoomed-out-10
    ",
            "html": "
      <div
        aria-label=\\"Cluster met 99 appartementen\\"
        class=\\"data-selection-cluster__text\\"
      >99</div>
    ",
            "iconAnchor": Array [
              9,
              9,
            ],
            "iconSize": Array [
              18,
              18,
            ],
            "popupAnchor": null,
          },
        }
      }
      key="52.37282671970952,4.883399484657263dataSelectionType"
      position={
        Array [
          52.37282671970952,
          4.883399484657263,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "
      data-selection-cluster
      data-selection-cluster--zoomed-out
      data-selection-cluster--zoomed-out-100
    ",
            "html": "
      <div
        aria-label=\\"Cluster met 9999 appartementen\\"
        class=\\"data-selection-cluster__text\\"
      >9999</div>
    ",
            "iconAnchor": Array [
              11,
              11,
            ],
            "iconSize": Array [
              23,
              23,
            ],
            "popupAnchor": null,
          },
        }
      }
      key="52.37282671970952,4.883399484657263dataSelectionType"
      position={
        Array [
          52.37282671970952,
          4.883399484657263,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "
      data-selection-cluster
      data-selection-cluster--zoomed-in
      data-selection-cluster--zoomed-in-100
    ",
            "html": "
      <div
        aria-label=\\"Cluster met 100 appartementen\\"
        class=\\"data-selection-cluster__text\\"
      >100</div>
    ",
            "iconAnchor": Array [
              14,
              14,
            ],
            "iconSize": Array [
              29,
              29,
            ],
            "popupAnchor": null,
          },
        }
      }
      key="52.37282671970952,4.883399484657263dataSelectionType"
      position={
        Array [
          52.37282671970952,
          4.883399484657263,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "
      data-selection-cluster
      data-selection-cluster--zoomed-in
      data-selection-cluster--zoomed-in-10
    ",
            "html": "
      <div
        aria-label=\\"Cluster met 10 appartementen\\"
        class=\\"data-selection-cluster__text\\"
      >10</div>
    ",
            "iconAnchor": Array [
              12,
              12,
            ],
            "iconSize": Array [
              24,
              24,
            ],
            "popupAnchor": null,
          },
        }
      }
      key="52.37282671970952,4.883399484657263dataSelectionType"
      position={
        Array [
          52.37282671970952,
          4.883399484657263,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "
      data-selection-cluster
      data-selection-cluster--zoomed-in
      data-selection-cluster--zoomed-in-1
    ",
            "html": "
      <div
        aria-label=\\"Cluster met 2 appartementen\\"
        class=\\"data-selection-cluster__text\\"
      >2</div>
    ",
            "iconAnchor": Array [
              10,
              10,
            ],
            "iconSize": Array [
              21,
              21,
            ],
            "popupAnchor": null,
          },
        }
      }
      key="52.37282671970952,4.883399484657263dataSelectionType"
      position={
        Array [
          52.37282671970952,
          4.883399484657263,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "
      data-selection-cluster
      data-selection-cluster--zoomed-in
      data-selection-cluster--zoomed-in-point
    ",
            "html": "
      <div
        aria-label=\\"Cluster met 1 appartementen\\"
        class=\\"data-selection-cluster__text\\"
      ></div>
    ",
            "iconAnchor": Array [
              10,
              10,
            ],
            "iconSize": Array [
              21,
              21,
            ],
            "popupAnchor": null,
          },
        }
      }
      key="52.37282671970952,4.883399484657263dataSelectionType"
      position={
        Array [
          52.37282671970952,
          4.883399484657263,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "panorama_person",
            "iconAnchor": Array [
              9,
              22,
            ],
            "iconSize": Array [
              18,
              31,
            ],
            "iconUrl": "/assets/images/map/panorama-person.svg",
            "popupAnchor": null,
            "shadowAnchor": null,
            "shadowSize": null,
            "shadowUrl": null,
          },
        }
      }
      key="52.37282671971952,4.883399484657263panoramaPersonType"
      position={
        Array [
          52.37282671971952,
          4.883399484657263,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "panorama_orientation",
            "iconAnchor": Array [
              35,
              35,
            ],
            "iconSize": Array [
              70,
              70,
            ],
            "iconUrl": "/assets/images/map/panorama-orientation.svg",
            "popupAnchor": null,
            "shadowAnchor": null,
            "shadowSize": null,
            "shadowUrl": null,
          },
        }
      }
      key="52.37282671971952,4.883399484657263panoramaOrientationType"
      position={
        Array [
          52.37282671971952,
          4.883399484657263,
        ]
      }
      rotationAngle={45}
      zIndexOffset={100}
    />
    <ScaleControl
      imperial={false}
      metric={true}
      position="bottomright"
    />
    <ZoomControl
      position="bottomright"
      zoomInTitle="Inzoomen"
      zoomOutTitle="Uitzoomen"
    />
    <LoadingIndicator
      loading={false}
      showMapLink={true}
    />
  </Map>
</ResizeDetector>
`;

exports[`MapLeaflet component should render markers 2`] = `
<ResizeDetector
  handleHeigh={true}
  handleHeight={false}
  handleWidth={true}
  nodeType="div"
  onResize={[Function]}
  querySelector={null}
  refreshRate={1000}
  skipOnMount={false}
  style={
    Object {
      "bottom": "0",
      "left": "0",
      "position": "absolute",
      "right": "0",
      "top": "0",
    }
  }
  targetDomEl={null}
>
  <Map
    attributionControl={false}
    bounceAtZoomLimits={false}
    center={
      Array [
        52.3731081,
        4.8932945,
      ]
    }
    maxBounds={
      Array [
        Array [
          52.25168,
          4.64034,
        ],
        Array [
          52.50536,
          5.10737,
        ],
      ]
    }
    maxBoundsViscosity={1}
    onClick={[Function]}
    onDragEnd={[Function]}
    onLayerRemove={[Function]}
    onZoomEnd={[Function]}
    zoom={9}
    zoomControl={false}
  >
    <TileLayer
      bounds={
        Array [
          Array [
            52.25168,
            4.64034,
          ],
          Array [
            52.50536,
            5.10737,
          ],
        ]
      }
      maxZoom={16}
      minZoom={8}
      onLoad={[Function]}
      onLoading={[Function]}
      subdomains={
        Array [
          "acc.t1",
          "acc.t2",
          "acc.t3",
          "acc.t4",
        ]
      }
      tms={true}
      url="https://{s}.data.amsterdam.nl/topo_rd/{z}/{x}/{y}.png"
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "dp-leaflet-search-icon",
            "iconAnchor": Array [
              23,
              65,
            ],
            "iconSize": Array [
              48,
              77,
            ],
            "iconUrl": "/assets/images/map/search.svg",
            "popupAnchor": null,
            "shadowAnchor": null,
            "shadowSize": null,
            "shadowUrl": null,
          },
        }
      }
      key="52.37282671970971,4.883399484657262geoSearchType"
      position={
        Array [
          52.37282671970971,
          4.883399484657262,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "dp-leaflet-detail-item",
            "iconAnchor": Array [
              10,
              10,
            ],
            "iconSize": Array [
              21,
              21,
            ],
            "iconUrl": "/assets/images/map/detail.svg",
            "popupAnchor": null,
            "shadowAnchor": null,
            "shadowSize": null,
            "shadowUrl": null,
          },
        }
      }
      key="52.37282671970951,4.883399484657232detailPointType"
      position={
        Array [
          52.37282671970951,
          4.883399484657232,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "
      data-selection-cluster
      data-selection-cluster--zoomed-out
      data-selection-cluster--zoomed-out-point
    ",
            "html": "
      <div
        aria-label=\\"Cluster met 1 appartementen\\"
        class=\\"data-selection-cluster__text\\"
      ></div>
    ",
            "iconAnchor": Array [
              7,
              7,
            ],
            "iconSize": Array [
              15,
              15,
            ],
            "popupAnchor": null,
          },
        }
      }
      key="52.37282671970952,4.883399484657263dataSelectionType"
      position={
        Array [
          52.37282671970952,
          4.883399484657263,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "
      data-selection-cluster
      data-selection-cluster--zoomed-out
      data-selection-cluster--zoomed-out-1
    ",
            "html": "
      <div
        aria-label=\\"Cluster met 9 appartementen\\"
        class=\\"data-selection-cluster__text\\"
      >9</div>
    ",
            "iconAnchor": Array [
              7,
              7,
            ],
            "iconSize": Array [
              15,
              15,
            ],
            "popupAnchor": null,
          },
        }
      }
      key="52.37282671970952,4.883399484657263dataSelectionType"
      position={
        Array [
          52.37282671970952,
          4.883399484657263,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "
      data-selection-cluster
      data-selection-cluster--zoomed-out
      data-selection-cluster--zoomed-out-10
    ",
            "html": "
      <div
        aria-label=\\"Cluster met 99 appartementen\\"
        class=\\"data-selection-cluster__text\\"
      >99</div>
    ",
            "iconAnchor": Array [
              9,
              9,
            ],
            "iconSize": Array [
              18,
              18,
            ],
            "popupAnchor": null,
          },
        }
      }
      key="52.37282671970952,4.883399484657263dataSelectionType"
      position={
        Array [
          52.37282671970952,
          4.883399484657263,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "
      data-selection-cluster
      data-selection-cluster--zoomed-out
      data-selection-cluster--zoomed-out-100
    ",
            "html": "
      <div
        aria-label=\\"Cluster met 9999 appartementen\\"
        class=\\"data-selection-cluster__text\\"
      >9999</div>
    ",
            "iconAnchor": Array [
              11,
              11,
            ],
            "iconSize": Array [
              23,
              23,
            ],
            "popupAnchor": null,
          },
        }
      }
      key="52.37282671970952,4.883399484657263dataSelectionType"
      position={
        Array [
          52.37282671970952,
          4.883399484657263,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "
      data-selection-cluster
      data-selection-cluster--zoomed-in
      data-selection-cluster--zoomed-in-100
    ",
            "html": "
      <div
        aria-label=\\"Cluster met 100 appartementen\\"
        class=\\"data-selection-cluster__text\\"
      >100</div>
    ",
            "iconAnchor": Array [
              14,
              14,
            ],
            "iconSize": Array [
              29,
              29,
            ],
            "popupAnchor": null,
          },
        }
      }
      key="52.37282671970952,4.883399484657263dataSelectionType"
      position={
        Array [
          52.37282671970952,
          4.883399484657263,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "
      data-selection-cluster
      data-selection-cluster--zoomed-in
      data-selection-cluster--zoomed-in-10
    ",
            "html": "
      <div
        aria-label=\\"Cluster met 10 appartementen\\"
        class=\\"data-selection-cluster__text\\"
      >10</div>
    ",
            "iconAnchor": Array [
              12,
              12,
            ],
            "iconSize": Array [
              24,
              24,
            ],
            "popupAnchor": null,
          },
        }
      }
      key="52.37282671970952,4.883399484657263dataSelectionType"
      position={
        Array [
          52.37282671970952,
          4.883399484657263,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "
      data-selection-cluster
      data-selection-cluster--zoomed-in
      data-selection-cluster--zoomed-in-1
    ",
            "html": "
      <div
        aria-label=\\"Cluster met 2 appartementen\\"
        class=\\"data-selection-cluster__text\\"
      >2</div>
    ",
            "iconAnchor": Array [
              10,
              10,
            ],
            "iconSize": Array [
              21,
              21,
            ],
            "popupAnchor": null,
          },
        }
      }
      key="52.37282671970952,4.883399484657263dataSelectionType"
      position={
        Array [
          52.37282671970952,
          4.883399484657263,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "
      data-selection-cluster
      data-selection-cluster--zoomed-in
      data-selection-cluster--zoomed-in-point
    ",
            "html": "
      <div
        aria-label=\\"Cluster met 1 appartementen\\"
        class=\\"data-selection-cluster__text\\"
      ></div>
    ",
            "iconAnchor": Array [
              10,
              10,
            ],
            "iconSize": Array [
              21,
              21,
            ],
            "popupAnchor": null,
          },
        }
      }
      key="52.37282671970952,4.883399484657263dataSelectionType"
      position={
        Array [
          52.37282671970952,
          4.883399484657263,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "panorama_person",
            "iconAnchor": Array [
              9,
              22,
            ],
            "iconSize": Array [
              18,
              31,
            ],
            "iconUrl": "/assets/images/map/panorama-person.svg",
            "popupAnchor": null,
            "shadowAnchor": null,
            "shadowSize": null,
            "shadowUrl": null,
          },
        }
      }
      key="52.37282671971952,4.883399484657263panoramaPersonType"
      position={
        Array [
          52.37282671971952,
          4.883399484657263,
        ]
      }
      rotationAngle={0}
      zIndexOffset={100}
    />
    <CustomMarker
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "className": "panorama_orientation",
            "iconAnchor": Array [
              35,
              35,
            ],
            "iconSize": Array [
              70,
              70,
            ],
            "iconUrl": "/assets/images/map/panorama-orientation.svg",
            "popupAnchor": null,
            "shadowAnchor": null,
            "shadowSize": null,
            "shadowUrl": null,
          },
        }
      }
      key="52.37282671971952,4.883399484657263panoramaOrientationType"
      position={
        Array [
          52.37282671971952,
          4.883399484657263,
        ]
      }
      rotationAngle={45}
      zIndexOffset={100}
    />
    <ScaleControl
      imperial={false}
      metric={true}
      position="bottomright"
    />
    <ZoomControl
      position="bottomright"
      zoomInTitle="Inzoomen"
      zoomOutTitle="Uitzoomen"
    />
    <LoadingIndicator
      loading={false}
      showMapLink={true}
    />
  </Map>
</ResizeDetector>
`;

map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    ~font/                     max;
    application/javascript     max;
    ~image/                    max;
}

server {
    listen       80;
    server_name  localhost;
    index index.html;
    root   /usr/share/nginx/html;

    gzip  on;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_min_length 1100;
    gzip_buffers     4 8k;
    gzip_proxied any;
    gzip_types
        # text/html is always compressed by HttpGzipModule
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/json
        application/xml
        application/rss+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;

    gzip_static on;

    gzip_proxied        expired no-cache no-store private auth;
    gzip_vary           on;

    expires $expires;

    absolute_redirect off;
    rewrite ^([^.\?]*[^/])$ $1/ permanent;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location = /robots.txt {
       add_header Content-Type text/plain;
       return 200 "User-agent: *\nDisallow: \n";
    }

    if ($request_uri = /index.html) {
        return 301 $scheme://$host;
    }

    error_page   404  /index.html;
    error_page   500 502 503 504  /50x.html;

    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location /niet-gevonden {
        return 404;
    }

    location /status/health {
        access_log off;
        return 200 "OK\n";
    }

    location /graphql {
        proxy_pass http://graphql:4000/graphql;
    }

    rewrite ^/blog$ https://amsterdam.github.io/datablog/ redirect;
}
